docker-container: &docker-container
  plugins:
    - docker#v3.8.0:
        image: "public.ecr.aws/automattic/android-build-image:v1.1.0"
        environment:
          - "CI=true"

steps:
  - label: "checkstyle"
    <<: *docker-container
    command: |
      cp gradle.properties-example gradle.properties
      ./gradlew checkstyle
    artifact_paths:
      - "**/build/reports/checkstyle/checkstyle.*"
  - label: "ktlint"
    <<: *docker-container
    command: |
      cp gradle.properties-example gradle.properties
      ./gradlew ciktlint
    artifact_paths:
      - "**/build/ktlint.xml"
  - label: "detekt"
    <<: *docker-container
    command: |
      cp gradle.properties-example gradle.properties
      ./gradlew WordPress:detekt
    artifact_paths:
      - "**/build/reports/detekt/detekt.html"
  - label: "lint"
    <<: *docker-container
    command: |
      cp gradle.properties-example gradle.properties
      ./gradlew lintWordpressVanillaRelease
    artifact_paths:
      - "**/build/reports/lint-results*.*"
  - label: "Test WordPress"
    <<: *docker-container
    command: |
      cp gradle.properties-example gradle.properties
      ./gradlew testWordpressVanillaRelease
  - label: "Test WordPressProcessors"
    <<: *docker-container
    command: |
      cp gradle.properties-example gradle.properties
      ./gradlew :libs:WordPressProcessors:test
  - label: "Test ImageEditor"
    <<: *docker-container
    command: |
      cp gradle.properties-example gradle.properties
      ./gradlew :libs:image-editor:ImageEditor:test
